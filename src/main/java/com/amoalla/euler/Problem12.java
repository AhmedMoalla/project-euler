import com.amoalla.euler.utils.Primes;

/// # Highly divisible triangular number
/// The sequence of triangle numbers is generated by adding the natural numbers.
/// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
/// The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
/// Let us list the factors of the first seven triangle numbers:
///  1: 1
///  3: 1,3
///  6: 1,2,3,6
/// 10: 1,2,5,10
/// 15: 1,3,5,15
/// 21: 1,3,7,21
/// 28: 1,2,4,7,14,28
/// We can see that 28 is the first triangle number to have over five divisors.
/// What is the value of the first triangle number to have over five hundred divisors?
void main() {
    int counter = 1;
    int triangleNumber = 1;
    while (true) {
        int numberOfDivisors = numberOfDivisors(triangleNumber);
        if (numberOfDivisors > 500) {
            println(triangleNumber);
            break;
        }
        triangleNumber += ++counter;
    }
}

// https://en.wikipedia.org/wiki/Divisor_function
int numberOfDivisors(int n) {
    return Primes.factor(n).stream()
            .mapToInt(pf -> pf.exponent() + 1)
            .reduce(1, (a, b) -> a * b);
}
